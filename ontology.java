package SDT;
import SDT.impl.*;
import java.util.Collection;
import org.protege.owl.codegeneration.CodeGenerationFactory;
import org.protege.owl.codegeneration.WrappedIndividual;
import org.protege.owl.codegeneration.impl.FactoryHelper;
import org.protege.owl.codegeneration.impl.ProtegeJavaMapping;
import org.protege.owl.codegeneration.inference.CodeGenerationInference;
import org.protege.owl.codegeneration.inference.SimpleInference;
import org.semanticweb.owlapi.model.OWLClass;
import org.semanticweb.owlapi.model.OWLOntology;
import org.semanticweb.owlapi.model.OWLOntologyStorageException;
/**
* A class that serves as the entry point to the generated code providing access
* to existing individuals in the ontology and the ability to create new individuals in the ontology.<p>
*
* Generated by Protege (http://protege.stanford.edu).<br>
* Source Class: ontology<br>
* @version generated on Sat Jun 12 21:29:25 WAT 2021 by Tedlwis
*/191
public class ontology implements CodeGenerationFactory {
private OWLOntology ontology;
private ProtegeJavaMapping javaMapping = new ProtegeJavaMapping();
private FactoryHelper delegate;
private CodeGenerationInference inference;
public ontology(OWLOntology ontology) {
this(ontology, new SimpleInference(ontology));
}